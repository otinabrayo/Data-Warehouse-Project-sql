
SELECT * FROM [bronze].[crm_sales_details];
---------------------------------------------------------------
---------------[bronze].[crm_cust_info]------------------------
---------------------------------------------------------------
-- Checks for NULL or Duplicates in Primary key
-- Expectation: No result

SELECT 
cst_id, 
COUNT(*)
FROM [bronze].[crm_cust_info]
GROUP BY cst_id
HAVING COUNT(*) > 1;

-- Check for unwanted spaces
-- Expectation: No result

SELECT cst_firstname
FROM [bronze].[crm_cust_info]
WHERE cst_firstname != TRIM(cst_firstname)


-- Data consistency and standardization

SELECT DISTINCT cst_marital_status
FROM [bronze].[crm_cust_info]


---------------------------------------------------------------
---------------[bronze].[crm_prd_info]------------------------
---------------------------------------------------------------
SELECT 
* 
FROM [bronze].[crm_prd_info];

-- Checks for NULL or Duplicates in Primary key
-- Expectation: No result

SELECT 
prd_id, 
COUNT(*)
FROM [bronze].[crm_prd_info]
GROUP BY prd_id
HAVING COUNT(*) > 1;

-- Check for unwanted spaces
-- Expectation: No result

SELECT prd_line
FROM [bronze].[crm_prd_info]
WHERE  prd_line != TRIM( prd_line);

-- Check for NULS or Negative numbers
-- Expectations: No result

SELECT prd_cost
FROM [bronze].[crm_prd_info]
WHERE prd_cost < 0 OR prd_cost IS NULL


---------------------------------------------------------------
---------------[bronze].[crm_sales_details]--------------------
---------------------------------------------------------------

-- Check for unwanted spaces
-- Expectation: No result

SELECT
*
FROM [bronze].[crm_sales_details]
WHERE sls_ord_num != TRIM(sls_ord_num);

-- cheking if prd key in sales is not in prd key in info / id
SELECT
*
FROM [bronze].[crm_sales_details]
-- WHERE sls_prd_key NOT IN (SELECT prd_key FROM [silver].[crm_prd_info]);
WHERE sls_cust_id NOT IN (SELECT cst_id FROM [silver].[crm_cust_info]);

-- Checking for invalid dates BY LENGTH/NULLS/ZEROS
SELECT
NULLIF(sls_order_dt, 0) sls_order_dt
FROM [bronze].[crm_sales_details]
WHERE sls_order_dt <= 0 OR LEN(sls_order_dt) != 8 ;


 --- Dealing with price , quantity and sales column mathematically


SELECT DISTINCT
CASE
	WHEN sls_sales IS NULL OR sls_sales < 0 OR sls_sales != sls_quantity * ABS(sls_price) THEN sls_quantity * ABS(sls_price)
	ELSE sls_sales
END sls_sales,
sls_quantity,
CASE
	WHEN sls_price IS NULL OR sls_price < 0  THEN sls_sales / NULLIF(sls_quantity, 0)
	ELSE sls_price
END sls_price

FROM [bronze].[crm_sales_details]
WHERE sls_sales != sls_price * sls_quantity 
OR sls_sales IS NULL OR sls_quantity IS NULL OR sls_price IS NULL
OR  sls_sales  < 0 OR sls_quantity < 0 OR sls_price < 0

---- confirming our table correctness 

SELECT *
FROM [silver].[crm_sales_details]
WHERE sls_order_dt > sls_ship_dt OR sls_order_dt > sls_due_dt;


SELECT * FROM [silver].[crm_sales_details]

----------- erp


SELECT DISTINCT(gen)
FROM [bronze].[erp_cust_az12]
WHERE bdate < '1924-01-01' OR bdate > GETDATE()



SELECT 
REPLACE(cid, '-', '') cid,
cntry
FROM [bronze].[erp_loc_a101]  WHERE REPLACE(cid, '-', '') NOT IN (SELECT cst_key FROM  [silver].[crm_cust_info]);

SELECT cst_key FROM [silver].[crm_cust_info];


SELECT DISTINCT(CNTRY)
FROM [bronze].[erp_loc_a101]

-- Checks for NULL or Duplicates in Primary key
-- Expectation: No result

SELECT 
cst_id, 
COUNT(*)
FROM [silver].[crm_cust_info]
GROUP BY cst_id
HAVING COUNT(*) > 1;

-- Check for unwanted spaces
-- Expectation: No result

SELECT cst_firstname
FROM [silver].[crm_cust_info]
WHERE cst_firstname != TRIM(cst_firstname)


-- Data consistency and standardization

SELECT DISTINCT cst_marital_status
FROM [silver].[crm_cust_info]

SELECT *
FROM silver.crm_prd_info


SELECT
id,
cat,
subcat,
maintenance
FROM [bronze].[erp_px_cat_g1v2]

-- Unwanted spaces

SELECT * FROM [bronze].[erp_px_cat_g1v2]
WHERE subcat != TRIM(subcat) OR cat != TRIM(cat)OR maintenance != TRIM(maintenance);

---- Data standardization and consistency
SELECT DISTINCT cat
FROM [bronze].[erp_px_cat_g1v2]

SELECT DISTINCT subcat
FROM [bronze].[erp_px_cat_g1v2]

SELECT DISTINCT maintenance
FROM [bronze].[erp_px_cat_g1v2]
